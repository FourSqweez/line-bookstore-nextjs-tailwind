import Head from 'next/head'
import React, { useEffect, useState } from 'react'
import ProductsFeed from '../src/components/ProductsFeed'
import { getBooksAPI, getPromotionsAPI } from './api/booksApi'
import { useDispatch } from 'react-redux'
import { addPromotions } from '../src/app/slices/promotionSlice'
import { useRouter } from 'next/router'

export default function Home({ books, promotions }) {
	const router = useRouter()
	const { searchInput } = router.query
	const dispatch = useDispatch()
	const [newBook, setNewBook] = useState([])

	const a = 'Harry is find'
	const b = a.toLowerCase()

	console.log('Test : ', b)
	console.log('Book quantity : ', newBook.length)

	useEffect(() => {
		if (searchInput) {
			const filterResult = books.filter((book) =>
				new RegExp(searchInput, 'i').test(book.title)
			)
			setNewBook(filterResult)

			// const caseSensitive = /[^A-Za-z0-9_.]/
			// const search = `/${searchInput}/gi` // true or false
			// book.title.match(`/${searchInput}/gi`)
			//const bookCaseInSensitive = /[^A-Za-z0-9_.]/.test(filterResult)
			// console.log('typing :', searchInput)
			// console.log('Search:', `/${searchInput}/gi`)
			// console.log('Search-2:', /`${searchInput}`/gi)
			// console.log('Hard Search:', /harry/gi)
			// console.log('filterResult : ', filterResult)
			// console.log('Case sensitive : ', caseSensitive)
		} else if (searchInput === '' || searchInput === undefined) {
			setNewBook([])
		}
	}, [searchInput])

	console.log('New book :', newBook)

	useEffect(() => {
		dispatch(addPromotions(promotions))
	}, [1])

	return (
		<div className="mx-1 sm:mx-10 mb-16">
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="mt-5 flex flex-col justify-center items-center">
				{searchInput == '' || searchInput == undefined ? (
					<ProductsFeed books={books} />
				) : newBook.length !== 0 ? (
					<ProductsFeed books={newBook} />
				) : (
					<h3>There are no books that match your search!</h3>
				)}
			</main>
		</div>
	)
}

export async function getServerSideProps() {
	const booksData = await getBooksAPI().then((res) => res.data)
	const promotionsData = await getPromotionsAPI().then((res) => res.data)

	return {
		props: {
			books: booksData,
			promotions: promotionsData,
		},
	}
}